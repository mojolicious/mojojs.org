% layout 'mojolicious';
% content_for 'header' => begin
  %= stylesheet '/mojolicious.css'
% end
<div id="mojo-fun">
  %= link_to 'https://metacpan.org/release/Mojolicious' => begin
    %= image '/mojolicious/unicorn.png'
  % end
  %= image '/mojolicious/balloon.png', id => 'mojo-balloon';
</div>
<header>
  %= include 'menubar'
</header>
<div class="container">
  <div class="row flex-wrap">
    <main class="col-sm-12 col-md-8 col-lg-10 py-md-3 pl-md-5">
      <div class="mojo-intro">
        <div class="mojo-fortune">
          <h1>
            %= fortune
          </h1>
          <p>
            Mojolicious is a fresh take on Perl web development, based on years of experience developing the Catalyst
            framework, and utilizing the latest web standards and technologies. You can get started with your project
            quickly, with a framework that grows with your needs.
          </p>
          <p>
            The Mojo stack provides a consistent set of components that can be used in any project. The guides cover
            most aspects of using the framework and the components have comprehensive reference documentation.
            Mojolicious is a real-time web framework, which allows a new class of web applications using WebSockets and
            having long-running requests without blocking.
          </p>
          <p>Join us now, and be a part of a friendly and knowledgeable community of developers!</p>
        </div>
        <h2>Features</h2>
        <div class="row">
          <div class="col-md">
            <ul>
              <li>
                An amazing <b>real-time web framework</b>, allowing you to easily grow single file prototypes into
                well-structured MVC web applications.
                <ul>
                  <li>
                    Everything you need to build cloud-native web applications for state of the art container
                    environments.
                  </li>
                  <li>
                    Powerful out of the box with RESTful routes, plugins, commands, Perl-ish templates, content
                    negotiation, session management, form validation, testing framework, static file server,
                    CGI/<a href="http://plackperl.org" target="_blank">PSGI</a> detection, first class Unicode support and
                    much more for you to discover.
                  </li>
                </ul>
              </li>
              <li>
                A powerful <b>web development toolkit</b>, that you can use for all kinds of applications, independently
                of the web framework.
                <ul>
                  <li>
                    Full stack HTTP and WebSocket client/server implementation with IPv6, TLS, SNI, IDNA, HTTP/SOCKS5
                    proxy, UNIX domain socket, Comet (long polling), Promises/A+, async/await, keep-alive, connection
                    pooling, timeout, cookie, multipart and gzip compression support.
                  </li>
                  <li>
                    Built-in non-blocking I/O web server, supporting multiple event loops as well as optional pre-forking
                    and hot deployment, perfect for building highly scalable web services.
                  </li>
                  <li>JSON and HTML/XML parser with CSS selector support.</li>
                </ul>
              </li>
              <li>
                Very clean, portable and object-oriented pure-Perl API with no hidden magic and no requirements besides
                Perl 5.26.0 (versions as old as 5.16.0 can be used too, but may require additional CPAN modules to be
                installed)
              </li>
              <li>
                Fresh code based upon years of experience developing
                <a href="http://catalystframework.org" target="_blank">Catalyst</a>, free and open source.
              </li>
              <li>
                Hundreds of 3rd party <a href="https://metacpan.org/requires/distribution/Mojolicious">extensions</a> and
                high quality spin-off projects like the <a href="https://minion.pm">Minion</a> job queue.
              </li>
            </ul>
          </div>
          <div class="col-xs mojo-promotion">
            <a class="undecorated" href="https://leanpub.com/mojo_web_clients/">
              <img src="/mojolicious/books.png" alt="Get Books">
            </a>
            <br>
            <a class="undecorated" href="https://shop.spreadshirt.com/kraih/">
              <img src="/mojolicious/t-shirts.png" alt="Get T-Shirts">
            </a>
          </div>
        </div>
        <div class="mojo-install">
          <h2>Installation</h2>
          <p>All you need is a one-liner, it takes less than a minute.</p>
          <pre class="mojo-terminal"><code class="nohighlight">$ curl -L https://cpanmin.us | perl - -M https://cpan.metacpan.org -n Mojolicious</code></pre>
          <p>
            We recommend the use of a
            <a href="http://perlbrew.pl" target="_blank">Perlbrew</a> environment.
          </p>
        </div>
        <div class="mojo-start">
          <h2>Getting Started</h2>
          <p>These three lines are a whole web application.</p>
          <pre><code>use Mojolicious::Lite;

get &#39;/&#39; =&gt; {text =&gt; &#39;I ♥ Mojolicious!&#39;};

app-&gt;start;</code></pre>
          <p>
            To run the example with the built-in development web server, just put the code into a file and start it with
            <code>morbo</code>.
          </p>
          <pre class="mojo-terminal"><code class="nohighlight">$ morbo hello.pl
Web application available at http://127.0.0.1:3000</code></pre>
          <p>
            Test it with any HTTP client you prefer.
          </p>
          <pre class="mojo-terminal"><code class="nohighlight">$ curl http://127.0.0.1:3000/
I ♥ Mojolicious!</code></pre>
        </div>
        <div class="mojo-tape">
          <h2>Duct tape for the HTML5 web</h2>
          <p>
            Use all the latest Perl and HTML features in beautiful single file prototypes like this one, and
            <a href="https://docs.mojolicious.org/Mojolicious/Guides/Growing#Differences">grow</a> them easily into
            well-structured <b>Model-View-Controller</b> web applications.
          </p>
          <pre><code>use Mojolicious::Lite -signatures;

# Render template &quot;index.html.ep&quot; from the DATA section
get &#39;/&#39; =&gt; sub ($c) {
  $c-&gt;render(template =&gt; &#39;index&#39;);
};

# WebSocket service used by the template to extract the title from a web site
websocket &#39;/title&#39; =&gt; sub ($c) {
  $c-&gt;on(message =&gt; sub ($c, $msg) {
    my $title = $c-&gt;ua-&gt;get($msg)-&gt;result-&gt;dom-&gt;at(&#39;title&#39;)-&gt;text;
    $c-&gt;send($title);
  });
};

app-&gt;start;
<% %>__DATA__

<% %>@@ index.html.ep
%% my $url = url_for &#39;title&#39;;
&lt;script&gt;
  var ws = new WebSocket(&#39;&lt;%= $url-&gt;to_abs %&gt;&#39;);
  ws.onmessage = function (event) { document.body.innerHTML += event.data };
  ws.onopen    = function (event) { ws.send(&#39;https://mojolicious.org&#39;) };
&lt;/script&gt;</code></pre>
        </div>
        <div class="mojo-more">
          %= image '/mojolicious/butterfly.png', class => 'mojo-butterfly';
          <h1>Want to know more?</h1>
          <p>
            Take a look at our excellent
            <a href="https://docs.mojolicious.org">documentation</a>!
          </p>
        </div>
      </div>
    </main>
  </div>
</div>
<footer>
  %= include 'footer'
</footer>
<script>
  $(window).on("mousemove", function (e) {
    var height    = $(document).height();
    var positionY = -(height - 2 * e.screenY) / height;
    var width     = $(document).width();
    var positionX = -(width - 2 * e.screenX) / width;
    $("#mojo-balloon").css({
      "right": 10 + positionX + "%",
      "top"  : 220 + (positionY * -25) + "px"}
    );
  });
  $(window).on("mousemove", function (e) {
    var width    = $(document).width();
    var position = -(width - 2 * e.screenX) / width;
    $("#mojo-fun").css({"backgroundPosition": 0 + (position * 3) + "px 0"});
  });
</script>
